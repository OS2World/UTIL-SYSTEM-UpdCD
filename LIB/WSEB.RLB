/**************************************************************************/
/* updcd rexx library - wseb specific functions                           */
/* created: 12.17.2001                                                    */
/* 03.05.2002: improved SMP file integration                              */
/* 04.14.2002: improved FI update integration                             */
/* 05.05.2002: improved mpts fixpak postprocessing                        */
/* 05.18.2002: added extra dependence check                               */
/* 07.11.2002: aligned with warp 3 printer fixpak integration             */
/* 09.09.2002: added support for java toolkit, samples and rmi-iop fixpak */
/* 09.10.2002: corrected copy function JAVA fixpaks                       */
/* 09.14.2002: aligned with device driver fixpak 3                        */
/*             aligned with LS fixpak ip8605                              */
/* 09.25.2002: fixpack and DDpack processing will done by release date    */
/*             added Volume name of burned CD                             */
/* 11.07.2002: added resource file integration                            */
/* 11.12.2002: added support for tcp/ip and mpts fixpaks                  */
/* 12.14.2002: incorporating mpts fix 8706 might break install            */
/* 03.17.2003: added national language support                            */
/* 04.10.2003: removed expert mode                                        */
/* 05.16.2003: incorporating mpts fix 8706 might break install            */
/* 05.19.2003: create directories in upper case                           */
/* 06.02.2003: msg.200 -> msg.0200                                        */
/* 06.22.2003: mkrsp.cmd is not updated if addons are not selected        */
/* 06.29.2003: mkrsp.cmd was still not updated correctly                  */
/* 08.17.2003: added rdrive setting to cfg file                           */
/* 09.06.2003: added support for tcp/ip fixpak un2101                     */
/* 09.21.2003: added support for no-emulation boot                        */
/* 10.11.2003: fixed tcp/ip 4.3 problem with cmd files (jvc2)             */
/* 02.12.2003: added removal of RO attribs of floppy images               */
/* 08.19.2004: added new configuration options                            */
/* 09.18.2004: FI update integration was not complete                     */
/* 10.10.2004: added support for protocol driver integration              */
/* 10.30.2004: added incorporation of play.cmd                            */
/* 11.06.2004: added update of database.dat                               */
/* 02.20.2005: added nojava and nonetscape options                        */
/* 03.27.2005: old java entries were left in config.sys                   */
/* 04.03.2005: nsc/java should't be added if they are removed             */
/* 04.15.2005: resource file integration were not complete                */
/* 08.16.2005: added check to see if CD already updated                   */
/* 02.19.2006: added usb boot CD support                                  */
/* 07.12.2006: macs.zip should be recrated in eCS MPTS distr.             */
/* 09.16.2006: updated tcpinst.rsp was not used by clifi                  */
/*             fix LS error NET2186 by deleting UPE.3\*R.???              */
/* 12.04.2006: added check for attrib on empty fixes and updates dir      */
/* 12.05.2006: patch sysinst2.exe to avoid aic78u2.add load error         */
/**************************************************************************/

/*******************/
/* start things up */
/*******************/

/* declare os type */
os2_version = 'wseb'

/* start */
call start_up

/* check if we have the obligatory components */
call check_components 'fpk.dd.dir fpk.os2.dir'
call check_dependecies os2_version

/* check if CD already updated */
if stream(w4cd'\readme.ucd', 'c', 'query exists') <> '' then do
	say 
	say ' 'msg.0589
	if (GetKeyYN() = translate(msg.0479)) then do
		'@del go4it.bsy >nul'
		exit
	end
end

/* startup screen */
call display_startup_screen burn burn 'Update 'os2_version' installation CD-ROM*Cleaning up 'burn

/**********************/
/* Clean up old image */
/**********************/

/* clean up burn */
call cleanup_burn

/* reset timer */
call time 'E'

/* remove RO attributes */
call execute '@attrib -r -s -h -a * /s'
call SysFileTree fixes'\*', 'ini.', 'BSO'
if ini.0 > 0 then call execute '@attrib -r -s -h -a 'fixes'\* /s'
call SysFileTree updates'\*', 'ini.', 'BSO'
if ini.0 > 0 then call execute '@attrib -r -s -h -a 'updates'\* /s'

/* create some directories */
'@mkdir 'burn '>nul 2>&1'
call execute '@mkdir 'burn'\UPDCD'
call execute '@mkdir 'burn'\UPDCD\BOOTIMG'
call execute '@mkdir 'burn'\UPDCD\BOOTIMG\DISK_0_1.IMG'
call execute '@mkdir 'burn'\UPDCD\BOOTIMG\DISK_2.IMG'

Call SetVolumeName ("WSeB")		/* By Isma - 25/09/2002 */

/*************************************/
/* Update installation floppy images */
/*************************************/

say '1B'x || '[4;26H'substr(burn, 1, 50)
say '1B'x || '[5;26H'substr(w4cd, 1, 50)
call display_action msg.0200
call execute '@mkdir 'burn'\DISKIMGS'
call execute '@xcopy 'w4cd'\diskimgs\* 'burn'\diskimgs\. /H/O/T/R/V'
call execute '@mkdir 'burn'\DISKIMGS\OS2'
call execute '@mkdir 'burn'\DISKIMGS\OS2\35'
call execute '@copy 'w4cd'\diskimgs\os2\35\disk0.dsk 'burn'\diskimgs\os2\35\.'
call execute '@copy 'w4cd'\diskimgs\os2\35\disk1_cd.dsk 'burn'\diskimgs\os2\35\.'
call execute '@copy 'w4cd'\diskimgs\os2\35\disk2.dsk 'burn'\diskimgs\os2\35\.'

/* delete stuff from fix */
call cleanup_dir fix

/* 25/9/2002 - By Isma: Check the fixpack and DDpack levels */
/* and do the copy and unpacking in the correct order       */

/* DATES: FP01 - 25/04/2000    FP02 - 18/01/2001 */
/*        FP03 - 18/02/2002                      */

/*        DD01 - 17/08/1999    DD02 - 21/09/2000 */
/*        DD03 - 10/05/2002                      */

If ((fpk.dd.num = 3) | ((fpk.dd.num = 2) & (fpk.os2.num = 1))) then
   Do			/* do base Fixpack first because DDpack is newer */
     Call ProcessFixpack
     Call ProcessDDpack
   End
Else			/* do DDpack first because Base Fixpack is newer */  
   Do
     Call ProcessDDpack
     Call ProcessFixpack
   End

/* add resource files */
call SysFileTree 'fix\*.res', 'resfile.', 'FO', ,'**---'
do i=1 to resfile.0
	fixfile = translate(filespec('name', resfile.i), '.', '_')
	fixfile = 'fix\'substr(fixfile, 1, length(fixfile)-4)
	if stream(fixfile, 'c', 'query exists') <> '' then do
		call execute '@rc -n -w2 -x2' resfile.i fixfile
		call execute '@del 'resfile.i
	end
end

/* finally run update */
call execute '@attrib -r -s -h -a 'burn'\* /s'
call run_it 'bin\updif.cmd 'burn' fix 'n.errors n.warnings trunc(time('E')/60 + n.elapsed, 2) log ver add.dani.ide add.dani.flt add.dani.boot add.dani.dasd add.up2tb add.fat32 add.usb add.dummy emulate rdrive

/* do the rest */
say '1B'x || '[4;26H'substr(burn, 1, 50)
say '1B'x || '[5;26H'substr(w4cd, 1, 50)
call display_action msg.0200

call execute '@xcopy 'w4cd'\* 'burn'\. /H/O/T/R/V'

call execute '@mkdir 'burn'\CID'
call execute '@xcopy 'w4cd'\cid\* 'burn'\cid\. /H/O/T/S/R/V/E'

call execute '@mkdir 'burn'\IBMINST'
call execute '@xcopy 'w4cd'\ibminst\* 'burn'\ibminst\. /H/O/T/S/E/R/V'

call execute '@mkdir 'burn'\INFO'
call execute '@xcopy 'w4cd'\info\* 'burn'\info\. /H/O/T/S/E/R/V'

call execute '@mkdir 'burn'\BOOKS'
call execute '@xcopy 'w4cd'\books\* 'burn'\books\. /H/O/T/S/E/R/V'

call execute '@mkdir 'burn'\OS2IMAGE'
call execute '@xcopy 'w4cd'\os2image\* 'burn'\os2image\. /H/O/T/S/R/V/E'

/* remove RO attribute */
rc = SysFileTree(burn'\*', ini., 'BSO',,'**---')  
call execute '@attrib -r -s -h -a 'burn'\* /s'

/***********************************/
/* add Warp 4 FI products to updcd */
/***********************************/

if stream('fi\fibase.rsp', 'c', 'query exists') <> '' then do
	call execute '@mkdir 'burn'\FI'
	call execute '@xcopy fi\* 'burn'\fi\. /H/O/T/S/R/V/E'
	if stream(burn'\fi\coaches\os2\cchmain.exe', 'c', 'query exists') <> '' then do
		if stream('fix\cchmain.exe', 'c', 'query exists') <> '' then call execute '@copy fix\cchmain.exe 'burn'\fi\coaches\os2\.'
	end
	if stream(burn'\fi\coaches\os2\instprt.exe', 'c', 'query exists') <> '' then do
		if stream('fix\instprt.exe', 'c', 'query exists') <> '' then call execute '@copy fix\instprt.exe 'burn'\fi\coaches\os2\.'
	end
	if stream(burn'\fi\coaches\os2\dll\cchuser.dll', 'c', 'query exists') <> '' then do
		if stream('fix\cchuser.dll', 'c', 'query exists') <> '' then call execute '@copy fix\cchuser.dll 'burn'\fi\coaches\os2\dll\.'
	end
	if stream(burn'\fi\coaches\os2\dll\drvondsk.dll', 'c', 'query exists') <> '' then do
		if stream('fix\drvondsk.dll', 'c', 'query exists') <> '' then call execute '@copy fix\drvondsk.dll 'burn'\fi\coaches\os2\dll\.'
	end
	if stream(burn'\fi\coaches\os2\dll\portplug.dll', 'c', 'query exists') <> '' then do
		if stream('fix\portplug.dll', 'c', 'query exists') <> '' then call execute '@copy fix\portplug.dll 'burn'\fi\coaches\os2\dll\.'
	end
	if stream(burn'\fi\coaches\os2\dll\prtrlist.dll', 'c', 'query exists') <> '' then do
		if stream('fix\prtrlist.dll', 'c', 'query exists') <> '' then call execute '@copy fix\prtrlist.dll 'burn'\fi\coaches\os2\dll\.'
	end
	if stream(burn'\fi\coaches\os2\dll\sgmlpars.dll', 'c', 'query exists') <> '' then do
		if stream('fix\sgmlpars.dll', 'c', 'query exists') <> '' then call execute '@copy fix\sgmlpars.dll 'burn'\fi\coaches\os2\dll\.'
	end
end
if stream('fix\cchmain.exe',  'c', 'query exists') <> '' then call execute '@del  fix\cchmain.exe'
if stream('fix\instprt.exe',  'c', 'query exists') <> '' then call execute '@del  fix\instprt.exe'
if stream('fix\cchuser.dll',  'c', 'query exists') <> '' then call execute '@del  fix\cchuser.dll'
if stream('fix\drvondsk.dll', 'c', 'query exists') <> '' then call execute '@del  fix\drvondsk.dll'
if stream('fix\portplug.dll', 'c', 'query exists') <> '' then call execute '@del  fix\portplug.dll'
if stream('fix\prtrlist.dll', 'c', 'query exists') <> '' then call execute '@del  fix\prtrlist.dll'
if stream('fix\sgmlpars.dll', 'c', 'query exists') <> '' then call execute '@del  fix\sgmlpars.dll'

/********************************************************************/
/* incorporate OS/2 and Device Driver fixpaks and Feature Installer */
/********************************************************************/

/* copy FI update to fixdir */
if upd.fii.dir <> '' then do
	/* save pmddeml.dll */
	call execute '@copy fix\pmddeml.dll fix\pmddeml.org'
	/* copy FI files */
	call execute '@xcopy 'upd.fii.dir'\* fix\.'
	/* remove files that are not needed */
	call execute '@del fix\checkasd.exe'
	call execute '@del fix\checkasd.msg'
	call execute '@del fix\fisetmri.dll'
	call execute '@del fix\fisetup.exe '
	call execute '@del fix\readme      '
	call execute '@del fix\rejoinea.exe'
	/* restore pmddeml.dll from fixpak */
	call execute '@copy fix\pmddeml.org fix\pmddeml.dll'
	call execute '@del fix\pmddeml.org'

	/* move FI plug-in if Netscape is found */
	if upd.nsc.dir <> '' then do
		call execute '@copy fix\npfi.dll 'burn'\cid\server\netscape'
		call execute '@del fix\npfi.dll'
	end
end

/* copy sym files from printer driver fixpak */
if fpk.pdd.dir <> '' then do
	call execute '@xcopy 'fpk.pdd.dir'\*.sym fix\.'
end

/* add updated printer list */
if fpk.pdd.dir <> '' then do
	call execute '@copy newinst\PRDESC.LST fix\.'
	call create_printer_list
end

/* add updated program database */
call execute '@copy newinst\database.txt fix\.'
bundle_file = find_bundled_file(w4cd'\os2image bundle dbtags.dat')
call execute '@bin\unpack 'bundle_file' fix\. /N:DBTAGS.DAT'
call execute '@PARSEDB fix\DBTAGS.DAT fix\DATABASE.TXT fix\DATABASE.DAT'
call execute '@del fix\dbtags.dat'

/* add updated play.cmd */
call execute '@copy newinst\play.cmd fix\.'

/* run update */
'@copy pin\basefpk.wsb pin\basefpk.pin >nul'
call delete_if_exist 'fix\fibase.rsp fix\JAVA.RSP fix\WARNING fix\smp\WARNING'
call copy_if_exist 'fix\smp fix\TRC010A.TFF fix\TRC0010.TFF fix\PMMERGE.SYM fix\TRC0104.TFF fix\TRC0105.TFF fix\TRC0106.TFF fix\TRC0107.TFF fix\TRC0108.TFF fix\TRC0109.TFF fix\PMDF.EXE fix\TRC0103.TFF'
call copy_if_exist 'fix\smp fix\PMWP.SYM fix\SESDD32.SYS fix\PMCTLS.SYM fix\MONCALLS.TDF fix\OS2CHAR.TDF fix\OS2KRNL.TDF fix\PMSPL.SYM fix\PMVIOP.SYM fix\QUECALLS.TDF fix\SESMGR.TDF fix\TRC0102.TFF'
call copy_if_exist 'fix\smp fix\TRC0003.TFF fix\TRC0004.TFF fix\TRC0005.TFF fix\TRC0006.TFF fix\TRC0016.TFF fix\TRC0017.TFF fix\TRC0018.TFF fix\TRC006D.TFF fix\TRC0100.TFF fix\TRC0101.TFF'
call run_it 'bin\updcd.cmd 'burn' fix 'n.errors n.warnings trunc(time('E')/60 + n.elapsed, 2) log ver

/* delete stuff from fix */
call cleanup_dir fix
call execute '@rmdir fix\smp'

/*************************************/
/* incorporate printer driver fixpak */
/*************************************/

if fpk.pdd.dir <> '' then do
	/* copy fix */
	call display_action msg.0201
	call execute '@xcopy 'fpk.pdd.dir'\* fix\.'

	/* remove some files */
	call delete_if_exist 'fix\readme fix\license fix\pscript.lst fix\plotters.lst fix\omni.lst fix\laserjet.lst'

	/* rename some files */
	call execute '@copy fix\*.ea fix\*.ea_'
	call execute '@del fix\*.ea' 

	/* run update */
	'@copy pin\PRNTFPK.WP4 pin\PRNTFPK.PIN >nul'
	call run_it 'bin\updcd.cmd 'burn' fix 'n.errors n.warnings trunc(time('E')/60 + n.elapsed, 2) log ver

	/* delete stuff from fix */
	call cleanup_dir fix

end

/******************************************/
/* incorporate MPTS replacement and fixes */
/******************************************/

if upd.mpt.dir <> '' then do
	/* delete old mpts */
	rc = SysFileTree(burn'\cid\server\mpts\*', ini., 'FSO',,'**---')  
	call deldir burn'\cid\server\mpts'
	call execute '@mkdir 'burn'\CID\SERVER\MPTS'

	/* copy replacement mpts */
	call display_action msg.0202
	call execute '@xcopy 'upd.mpt.dir'\* 'burn'\cid\server\mpts\. /H/O/T/S/R/V/E'

	/* create macs.zip if needed */
	if stream(burn'\cid\server\mpts\ibmcom\macs\macs.zip', 'c', 'query size') < 500 then do
		nic_list = ''
		call SysFileTree burn'\cid\server\mpts\ibmcom\macs\*', 'ini.', 'FO'
		if ini.0 > 0 then 
			do i=1 to ini.0
				temp_nic = filespec('name', ini.i)
				if translate(temp_nic) <> 'MACS.ZIP' then nic_list = nic_list' 'temp_nic
			end
		if nic_list <> '' then do
			cddir = burn'\cid\server\mpts'
			fpdir = burn'\cid\server\mpts\ibmcom\macs'
			call add2zip 'ibmcom\macs\macs.zip ibmcom\macs 'nic_list
		end
	end

end

/* add mpts fixpak */
if fpk.mpt.dir <> '' then do
		/* copy fix */
		call display_action msg.0203
		call execute '@xcopy 'fpk.mpt.dir'\fix\MPT.1\* fix\.'
		call execute '@xcopy 'fpk.mpt.dir'\fix\TRP.2\* fix\.'
		call execute '@xcopy 'fpk.mpt.dir'\fix\DHC.3\* fix\.'

		if fpk.mpt.num < 8706 then do
			call execute '@xcopy 'fpk.mpt.dir'\fix\SIF.4\* fix\.'
			call execute '@xcopy 'fpk.mpt.dir'\fix\LCU.5\* fix\.'
		end

		/* then prepare it */
		call run_it 'bin\prpfp.cmd fix 'n.errors n.warnings trunc(time('E')/60 + n.elapsed, 2) ver log

		/* add MPTS addons */
		call SysFileTree fpk.mpt.dir'\addons\*', 'ini.', 'FO'
		if ini.0 > 0 then call execute '@xcopy 'fpk.mpt.dir'\addons\* fix\.'

		/* add resource files */
		call SysFileTree 'fix\*.res', 'resfile.', 'FO', ,'**---'
		do i=1 to resfile.0
			fixfile = translate(filespec('name', resfile.i), '.', '_')
			fixfile = 'fix\'substr(fixfile, 1, length(fixfile)-4)
			if stream(fixfile, 'c', 'query exists') <> '' then do
				call execute '@rc -n -w2 -x2' resfile.i fixfile
				call execute '@del 'resfile.i
			end
		end

		/* finally run update */
		'@copy pin\MPTSFPK.W41 pin\MPTSFPK.pin >nul'
		call run_it 'bin\updcd.cmd 'burn'\cid\server\mpts fix 'n.errors n.warnings trunc(time('E')/60 + n.elapsed, 2) log ver

		/* handle nic's */
		nic_list = ''
		call SysFileTree fpk.mpt.dir'\addons\macs\*', 'ini.', 'FO'
		if ini.0 > 0 then 
			do i=1 to ini.0
				nic_list = nic_list' 'filespec('name', ini.i)
			end
		if nic_list <> '' then do
			cddir = burn'\cid\server\mpts'
			fpdir = fpk.mpt.dir'\addons\macs'
			call add2zip 'ibmcom\macs\macs.zip ibmcom\macs 'nic_list
		end

		/* handle protocols */
		proto_list = ''
		call SysFileTree fpk.mpt.dir'\addons\protocols\*', 'ini.', 'FO'
		if ini.0 > 0 then 
			do i=1 to ini.0
				proto_list = proto_list' 'filespec('name', ini.i)
			end
		if proto_list <> '' then do
			cddir = burn'\cid\server\mpts'
			fpdir = fpk.mpt.dir'\addons\protocols'
			call add2zip 'ibmcom\protocol\protocol.zip ibmcom\protocol 'proto_list
		end

		/* delete stuff from fix */
		call cleanup_dir fix
end

/* update sniffer */
if stream(burn'\cid\server\MPTS\APPLETS\MPTSAPLT.ZIP', 'c', 'query exists') <> '' then do
		call execute '@bin\unzip -jCo 'burn'\cid\server\MPTS\APPLETS\MPTSAPLT.ZIP APPLETS\OS2SNIFF.EXE  -d 'burn'\ibminst\. '
		call execute '@bin\unzip -jCo 'burn'\cid\server\MPTS\APPLETS\MPTSAPLT.ZIP APPLETS\NCD.DLL       -d 'burn'\ibminst\. '
		call execute '@bin\unzip -jCo 'burn'\cid\server\MPTS\APPLETS\MPTSAPLT.ZIP APPLETS\NCD.MSG       -d 'burn'\ibminst\. '
		call execute '@copy 'burn'\ibminst\os2sniff.exe 'burn'\ibminst\clbsniff.exe'
		call execute '@copy 'burn'\ibminst\ncd.dll 'burn'\ibminst\clbncd.dll'
end

/* update files in \cid\nif with updated mpts */
if stream(burn'\cid\server\MPTS\ibmcom\protocol\protocol.ZIP', 'c', 'query exists') <> '' then do
	call deldir burn'\cid\nifs'
	call execute '@mkdir 'burn'\CID\NIFS'
	call execute '@mkdir 'burn'\CID\NIFS\MACS'
	call execute '@mkdir 'burn'\CID\NIFS\PROTOCOL'
	call execute '@bin\unzip -jo 'burn'\cid\server\mpts\ibmcom\protocol\protocol.zip -d 'burn'\cid\nifs'
	call execute '@bin\unzip -jo 'burn'\cid\server\mpts\ibmcom\protocol\protocol.zip -d 'burn'\cid\nifs\protocol'
	call execute '@bin\unzip -jo 'burn'\cid\server\mpts\ibmcom\macs\macs.zip         -d 'burn'\cid\nifs'
	call execute '@bin\unzip -jo 'burn'\cid\server\mpts\ibmcom\macs\macs.zip         -d 'burn'\cid\nifs\macs'
end

/* Fix: MPTS FP 8706 in combination with MPTS update 8701 breaks install */
if (fpk.mpt.num > 8705 & upd.mpt.num < 8705) then do /* restore good file */
	if stream(upd.mpt.dir'\ibmcom\dll\LAPSCID.DLL', 'c', 'query exists') <> '' then 
		call execute '@copy 'upd.mpt.dir'\ibmcom\dll\LAPSCID.DLL 'burn'\cid\server\mpts\ibmcom\dll\.'
	if stream(upd.mpt.dir'\ibmcom\dll\LAPSPM.DLL', 'c', 'query exists') <> '' then 
		call execute '@copy 'upd.mpt.dir'\ibmcom\dll\LAPSPM.DLL  'burn'\cid\server\mpts\ibmcom\dll\.'
end

/*********************************/
/* incorporate LAN Server fixpak */
/*********************************/

if fpk.per.dir <> '' then do
	/* copy fix */
	call display_action msg.0204
	call execute '@xcopy 'fpk.per.dir'\fix\REQ.1\* fix\.'
	call execute '@xcopy 'fpk.per.dir'\fix\SRV.5\* fix\.'
	call execute '@xcopy 'fpk.per.dir'\fix\SRV.6\* fix\.'
	if fpk.per.num < 8605 then do
		call execute '@xcopy 'fpk.per.dir'\fix\UPE.2\* fix\.'
		call execute '@xcopy 'fpk.per.dir'\fix\HFS.3\* fix\.'
		call execute '@xcopy 'fpk.per.dir'\fix\MUG.4\* fix\.'
		call execute '@xcopy 'fpk.per.dir'\fix\SRV.7\* fix\.'
	end
	else do
		call execute '@xcopy 'fpk.per.dir'\fix\UPE.3\* fix\.'
		call execute '@xcopy 'fpk.per.dir'\fix\MUG.2\* fix\.'
		call execute '@xcopy 'fpk.per.dir'\fix\SRV.4\* fix\.'
		call execute '@xcopy 'fpk.per.dir'\fix\HFS.7\* fix\.'
		call delete_if_exist 'fix\MUGACCTR.EX_ fix\MUGLEXER.EX_ fix\MUGLRQSR.EX_ fix\MUGWLOGR.EX_ fix\MUR.DL_ fix\NETAPI3R.DL_ fix\NETAPR.DL_'
	end

	/* then prepare it */
	call run_it 'bin\prpfp.cmd fix 'n.errors n.warnings trunc(time('E')/60 + n.elapsed, 2) ver log

	/* add LS addons */
	call SysFileTree fpk.per.dir'\addons\*', 'ini.', 'FO'
	if ini.0 > 0 then call execute '@xcopy 'fpk.per.dir'\addons\* fix\.'

	/* add resource files */
	call SysFileTree 'fix\*.res', 'resfile.', 'FO', ,'**---'
	do i=1 to resfile.0
		fixfile = translate(filespec('name', resfile.i), '.', '_')
		fixfile = 'fix\'substr(fixfile, 1, length(fixfile)-4)
		if stream(fixfile, 'c', 'query exists') <> '' then do
			call execute '@rc -n -w2 -x2' resfile.i fixfile
			call execute '@del 'resfile.i
		end
	end

	/* finally run update */
	'@copy pin\peerfpk.wsb pin\peerfpk.pin >nul'
	call delete_if_exist 'fix\CSINIREQ.EXE fix\CSINISRV.EXE fix\SYSLEVEL.PER'
	call run_it 'bin\updcd.cmd 'burn' fix 'n.errors n.warnings trunc(time('E')/60 + n.elapsed, 2) log ver

	/* delete stuff from fix */
	call cleanup_dir fix

end

/***************************/
/* incorporate Java update */
/***************************/

if upd.jav.dir <> '' & nojava <> 1 then do

	/* create Java dir and copy the files needed */
	call display_action msg.0207
	call execute '@mkdir 'burn'\CID\SERVER\JAVA'

	/* copy java cid.rsp to tabledir */
	call execute '@copy 'upd.jav.dir'\cid.rsp 'burn'\ibminst\tables\javacid.rsp'

	/* copy the rest to image */
	call execute '@xcopy 'upd.jav.dir'\* 'burn'\cid\server\java /H/O/T/R/V/E'
	call execute '@mkdir 'burn'\CID\SERVER\JAVA\PACKAGE'
	call execute '@xcopy 'upd.jav.dir'\package\* 'burn'\cid\server\java\package /H/O/T/S/R/V/E'
	call execute '@mkdir 'burn'\CID\SERVER\JAVA\EN'
	if lang = 'DK' | lang = 'FI' | lang = 'NL' then lang = 'EN' /* there is no java for these languages, use English version */
	call execute '@xcopy 'upd.jav.dir'\'lang'\* 'burn'\cid\server\java\en /H/O/T/S/R/V/E'
	
	/* seems this file should be in the root */
	call execute '@copy 'upd.jav.dir'\'lang'\00000000.EAS 'burn'\cid\server\java'

	/* rename java response file */
	call execute '@copy 'burn'\cid\server\java\en\java*.rsp 'burn'\cid\server\java\en\rspjava.rsp'
	call execute '@del 'burn'\cid\server\java\en\java*.rsp'

end

/**************************/
/* remove old JAVA engine */
/**************************/

if nojava = 1 then do

	/* remove java 1.1.7 from FI response file */
	if stream('fibase.loc', 'c', 'query exists') <> '' then do

		/* unpack fibase.rsp */
		location.fibase = linein('fibase.loc')
		call lineout 'fibase.loc'
		call execute '@bin\unpack 'location.fibase' . /N:FIBASE.RSP'

		/* set some variables */
		found_java = 0
		create_object = 0
		copy_file = 0
		in  = 'fibase.rsp'
		out = 'fibase.out'
		'@del 'out' >nul 2>>&1'

		/* read fibase */
		do while lines(in)
			l=linein(in)

			/* where are we now? */
			select
				when l='Java11=(' | l='Runtime=(' | l='RuntimeConfig=(' | l='Runtime^.Visible=(' | l='Samples=(' | l='SamplesConfig=(' | l='Toolkit=(' | l='ToolkitConfig=(' | l='Debugger=(' | l='DebuggerConfig=(' | l='TlktDoc=(' | l='TlktDocConfig=(' | l='NSFiles=(' then found_java = 1
				when found_java = 1 & l='	ObjectCreation=(' then do
					create_object = 1
					iterate
				end
				when found_java = 1 & l='	File=(' then do
					copy_file = 1
					iterate
				end
				when found_java = 1 & l='	AsciiFile=(' then do
					edit_file = 1
					iterate
				end
				when l='	)' & found_java = 1 & (create_object = 1 | copy_file = 1 | edit_file = 1) then do
					create_object = 0
				 	copy_file = 0
				 	edit_file = 0
					iterate
				end
				when l=')' & found_java = 1 then found_java = 0
				otherwise nop;
			end
		
			/* write out if it is not JAVA 1.1 create object or copy file */
			if found_java = 1 & (create_object = 1 | copy_file = 1) then iterate
			else call lineout out, l
		
		end
		call lineout in
		call lineout out

		/* pack new rsp file */
		call execute '@copy 'out in
		'@bin\pack2 \OS2\INSTALL\FIBASE.RSP 'location.fibase' /R >nul 2>>&1'
		call execute '@bin\pack2 'in location.fibase' /H:\OS2\INSTALL\ /A'

		/* clean up */
		'@del 'in'  >nul 2>>&1'
		'@del 'out' >nul 2>>&1'
	end

end

/****************************/
/* incorporate Java fixpaks */
/****************************/

if upd.jav.dir <> '' & fpk.jav.dir <> '' & nojava <> 1 then do

	/* copy fix */
	call display_action msg.0208
	call SysFileTree fpk.jav.dir'\*', 'tmp.', 'FSO'
	do i = 1 to tmp.0
		call execute '@copy 'tmp.i' fix\.'
	end

	/* delete some files */
	call execute '@del fix\FIXES.LST'

	/* finally run update */
	'@del pin\javatkt.pin >nul 2>>&1'
	if stream(burn'\cid\server\java\syslevel.jtk', 'c', 'query exists') <> '' then '@copy pin\javatkt.118 pin\javatkt.pin >nul'
	call run_it 'bin\updcd.cmd 'burn' fix 'n.errors n.warnings trunc(time('E')/60 + n.elapsed, 2) log ver

	/* delete stuff from fix */
	call cleanup_dir fix

end

/*****************************/
/* incorporate Netscape 4.61 */
/*****************************/

if upd.nsc.dir <> '' & nonetscape <> 1 then do

	call display_action msg.0206
	/* delete old netscape but preserve fi plug-in */
	call execute '@copy 'burn'\cid\server\netscape\npfi.dll fix\.'
	rc = SysFileTree(burn'\cid\server\netscape\*', ini., 'FSO',,'**---')  
	do i = 1 to ini.0
		call execute '@del 'ini.i
	end
	call execute '@copy fix\npfi.dll 'burn'\cid\server\netscape\.'
	call execute '@del fix\npfi.dll'

	/* copy files we need */
	call execute '@copy newinst\netscape.rsp 'burn'\ibminst\tables'
	call execute '@xcopy 'upd.nsc.dir'\* 'burn'\cid\server\netscape /H/O/T/S/R/V/E'

	/* update mkrsp.cmd */
	if iaddons <> 1 then call replace_string_in_file burn'\ibminst\mkrsp.cmd NS40 NS46'

end

/*******************/
/* Remove Netscape */
/*******************/

if nonetscape = 1 then do

	rc = SysFileTree(burn'\cid\server\netscape\*', ini., 'FSO',,'**---')  
	do i = 1 to ini.0
		call execute '@del 'ini.i
	end

end

/******************************/
/* incorporate 32-bits TCP/IP */
/******************************/

if upd.tcp.dir <> '' then do
	/* delete old TCP/IP */
	call SysFileTree burn'\cid\server\tcpapps\*', ini., 'FSO',,'**---'
	do i = 1 to ini.0
		call execute '@del 'ini.i
	end

	/* copy new one */
	call display_action msg.0209
	call execute '@xcopy 'upd.tcp.dir'\* 'burn'\cid\server\tcpapps /H/O/T/S/R/V/E'

	/* add new response file */
	call execute '@copy newinst\tcpip.rsp 'burn'\ibminst\tables'

	/* copy rsp file for clifi */
	call execute '@copy 'upd.tcp.dir'\install\tcpinst.rsp 'burn'\ibminst\tables\tcpinst.rsp'

end

/*****************************/
/* incorporate TCP/IP fixpak */
/*****************************/

if fpk.tcp.dir <> '' then do
	/* copy fix */
	call display_action msg.0210
	if fpk.tcp.num = '2101' then do
		call execute '@xcopy 'fpk.tcp.dir'\fix\TCP.1\* fix\.'
		call execute '@xcopy 'fpk.tcp.dir'\fix\NFS.2\* fix\.'
		call execute '@xcopy 'fpk.tcp.dir'\fix\DHS.3\* fix\.'
		call execute '@xcopy 'fpk.tcp.dir'\fix\DDN.4\* fix\.'
	end
	else do
		call execute '@xcopy 'fpk.tcp.dir'\fix\TCP.1\* fix\.'
		call execute '@xcopy 'fpk.tcp.dir'\fix\DDN.2\* fix\.'
		call execute '@xcopy 'fpk.tcp.dir'\fix\DHS.3\* fix\.'
		call execute '@xcopy 'fpk.tcp.dir'\fix\NFS.4\* fix\.'
	end

	/* delete some files */
	call delete_if_exist 'fix\APPSREAD.ME_ fix\CSINITCP.EXE fix\UINSTALL.EX_ fix\CSEXTTCP.EXE'

	/* then prepare it */
	call run_it 'bin\prpfp.cmd fix 'n.errors n.warnings trunc(time('E')/60 + n.elapsed, 2) ver log

	/* add TCP/IP addons */
	call SysFileTree fpk.tcp.dir'\addons\*', 'ini.', 'FO'
	if ini.0 > 0 then call execute '@xcopy 'fpk.tcp.dir'\addons\* fix\.'

	/* add resource files */
	call SysFileTree 'fix\*.res', 'resfile.', 'FO', ,'**---'
	do i=1 to resfile.0
		fixfile = translate(filespec('name', resfile.i), '.', '_')
		fixfile = 'fix\'substr(fixfile, 1, length(fixfile)-4)
		if stream(fixfile, 'c', 'query exists') <> '' then do
			call execute '@rc -n -w2 -x2' resfile.i fixfile
			call execute '@del 'resfile.i
		end
	end

	/* finally run update */
	'@del pin\tcppf32.pin >nul 2>>&1'

	if stream(burn'\cid\server\tcpapps\cfg2api.dll', 'c', 'query exists') <> '' then do
		call execute '@copy 'burn'\cid\server\tcpapps\cfg2api.dll 'burn'\cid\server\tcpapps\cfg2api.dl'
		call execute '@del 'burn'\cid\server\tcpapps\cfg2api.dll'
	end
	if stream(burn'\cid\server\tcpapps\tcpoocs.dll', 'c', 'query exists') <> '' then do
		call execute '@copy 'burn'\cid\server\tcpapps\tcpoocs.dll 'burn'\cid\server\tcpapps\tcpoocs.dl'
		call execute '@del 'burn'\cid\server\tcpapps\tcpoocs.dll'
	end
	if stream(burn'\cid\server\tcpapps\tcpoocsx.dll', 'c', 'query exists') <> '' then do
		call execute '@copy 'burn'\cid\server\tcpapps\tcpoocsx.dll 'burn'\cid\server\tcpapps\tcpoocsx.dl'
		call execute '@del 'burn'\cid\server\tcpapps\tcpoocsx.dll'
	end

	call run_it 'bin\updcd.cmd 'burn' fix 'n.errors n.warnings trunc(time('E')/60 + n.elapsed, 2) log ver

	if stream(burn'\cid\server\tcpapps\cfg2api.dl', 'c', 'query exists') <> '' then do
		call execute '@copy 'burn'\cid\server\tcpapps\cfg2api.dl 'burn'\cid\server\tcpapps\cfg2api.dll'
		call execute '@del 'burn'\cid\server\tcpapps\cfg2api.dl'
	end
	if stream(burn'\cid\server\tcpapps\tcpoocs.dl', 'c', 'query exists') <> '' then do
		call execute '@copy 'burn'\cid\server\tcpapps\tcpoocs.dl 'burn'\cid\server\tcpapps\tcpoocs.dll'
		call execute '@del 'burn'\cid\server\tcpapps\tcpoocs.dl'
	end
	if stream(burn'\cid\server\tcpapps\tcpoocsx.dl', 'c', 'query exists') <> '' then do
		call execute '@copy 'burn'\cid\server\tcpapps\tcpoocsx.dl 'burn'\cid\server\tcpapps\tcpoocsx.dll'
		call execute '@del 'burn'\cid\server\tcpapps\tcpoocsx.dl'
	end

	if fpk.tcp.num > 2205 & upd.tcp.num < 2205 then do
		call execute '@copy 'burn'\cid\server\tcpapps\install\makecmd.exe 'burn'\cid\server\tcpapps\install\makecmd2.exe'
		call execute '@copy newinst\makecmd.exe 'burn'\cid\server\tcpapps\install\.'
		call execute '@copy newinst\makecmd.cmd 'burn'\cid\server\tcpapps\install\.'
	end

	/* copy rsp file for clifi */
	call execute '@copy 'burn'\cid\server\tcpapps\install\tcpinst.rsp 'burn'\ibminst\tables\tcpinst.rsp'

	/* delete stuff from fix */
	call cleanup_dir fix

end

/* copy updated CID procedure */
call add_updated_cid_procedure 'wsb'

/* Add fixed getcfg.exe */
call add_getcfg

/* add fixed cdinst.cmd */
call execute '@copy newinst\cdinst.wsb 'burn'\cdinst.cmd'

/* patch sysinst2.exe to avoid aic78u2.add load error */
replace_string = 'BASEDEV=AIC78U2.ADD'
call SysFileTree burn'\sysinst2.exe', 'ini.', 'FSO'
do i=1 to ini.0
	call replace_string_in_binary_file ini.i' *'replace_string'* *'left('',length(replace_string))'*'
end

/* add UPDCD info to CD */
call add_updcd

/* clean up and report */
call clean_up

exit

/* *************   By Isma - 25/09/2002   ************************* */
/* ProcessFixpack -->  Copies base fixpack to fix directory         */
/* unpack all the files and then copies the addons directory to fix */
/* **************************************************************** */

ProcessFixpack:

   /* first copy the stuff we need to the fix directory */
   call display_action msg.0211

   call execute '@xcopy 'fpk.os2.dir'\fix\os2.1\* fix\.'
   call execute '@xcopy 'fpk.os2.dir'\fix\os2.2\* fix\.'
   call execute '@xcopy 'fpk.os2.dir'\fix\os2.4\* fix\.'
   '@rmdir fix\smp >nul 2>>&1'
   call execute '@mkdir fix\smp'
   call execute '@xcopy 'fpk.os2.dir'\fix\os2.3\* fix\smp\.'
   call execute '@xcopy 'fpk.os2.dir'\fix\os2.5\* fix\smp\.'
   call execute '@xcopy 'fpk.os2.dir'\fix\os2.1\*.SM_ fix\smp\.'

   Call DeleteExtra			/* By Isma - 25/09/2002 */ 

   /* then prepare it */
   call run_it 'bin\prpfp.cmd fix 'n.errors n.warnings trunc(time('E')/60 + n.elapsed, 2) ver log

   /* add base fixpack addons */

   call SysFileTree fpk.os2.dir'\addons\*', 'ini.', 'FO'
   if ini.0 > 0 then call execute '@xcopy 'fpk.os2.dir'\addons\* fix\.'
   call delete_if_exist 'fix\readme'

   call SysFileTree fpk.os2.dir'\addons\smp\*', 'ini.', 'FO'
   if ini.0 > 0 then call execute '@xcopy 'fpk.os2.dir'\addons\smp\* fix\smp\.'
   call delete_if_exist 'fix\smp\readme'

Return


/* **********   By Isma - 25/09/2002   ***************************** */
/* ProcessDDpack -->  Copies Driver fixpack to fix directory         */
/* unpack all the files and then copies the addons directory to fix  */
/* ***************************************************************** */

ProcessDDpack:

   /* first copy the stuff we need to the fix directory */
   call display_action msg.0213

   call execute '@xcopy 'fpk.dd.dir'\fix\bdd.1\*  fix\.'
   if fpk.dd.num < 3 then call execute '@xcopy 'fpk.dd.dir'\fix\bdd.4\*  fix\.'
   if fpk.dd.num = 1 then call execute '@xcopy 'fpk.dd.dir'\fix\bdd.5\*  fix\.'

   Call DeleteExtra			/* By Isma - 25/09/2002 */ 

   /* then prepare it */
   call run_it 'bin\prpfp.cmd fix 'n.errors n.warnings trunc(time('E')/60 + n.elapsed, 2) ver log

   /* add Device Driver addons */

   call SysFileTree fpk.dd.dir'\addons\*', 'ini.', 'FO'
   if ini.0 > 0 then call execute '@xcopy 'fpk.dd.dir'\addons\* fix\.'
   call delete_if_exist 'fix\readme'

   call SysFileTree fpk.dd.dir'\addons\smp\*', 'ini.', 'FO'
   if ini.0 > 0 then call execute '@xcopy 'fpk.dd.dir'\addons\smp\* fix\smp\.'
   call delete_if_exist 'fix\smp\readme'

Return

/* ******************************************* */
/* DeleteExtra -->  Deletes SMP and KBD files  */
/* ******************************************* */

DeleteExtra:

   /* delete kbd files */
   call delete_if_exist 'fix\KBD-AX.SY_ fix\KBD-106.SY_ fix\KBDBASE.SY_' 

   /* delete SMP files */
   call execute '@del fix\*.SM_'

Return

