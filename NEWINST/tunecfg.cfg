;   First, a word of warning. This file modifies your config.sys according to
;   your instructions. It is possible that you could do something that would
;   screw up your config.sys and ruin your new installation, and that would be
;   a bummer. Most installation routines would never give you this many
;   opportunities to do something stupid so please:

;      Read all these comments at least once. You may delete them of course.
;      Check your spelling...twice, then thrice.
;      Make sure you know what you're doing. Now is not the time to experiment!

;   Rest assured, should anything go wrong, it is your problem, not mine.  You
;   have been warned.  I guarantee that this script, unedited, will do nothing
;   more or less than the original tunecfg.cmd.
;
;   As you can see, lines can be commented by using a semi-colon as the
;   FIRST char of a new line.
;
;   In these commented sections, the terms 'variable' and 'definition' are
;   often used. 'Variable' refers to all that is to the left of the equal sign.
;   A variable can be one word like LIBPATH or two words like SET TMP.
;   'Definition' refers to all that is to the right of the equal sign. A
;   definition can have one value, or a series of semi-colon delimited values,
;   or a value followed by a series of parameters.

;   The macro syntax is a little bit like html:
;   All instructions must be placed within a command body.  Begin a command
;   body by typing all alone on one line a command enclosed by angle brackets.
;   On following lines type in your instructions.  Only type one instruction
;   per line.  Close the command body by typing again all alone on one line the
;   command enclosed by angle brackets with a forward slash.
;   Example:
;      <UPDATE>
;         FILES=4,4
;      </UPDATE>
;
;   Use the '?' to represent the boot drive when defining a path. For example:
;   SET TMP=?:\TMP
;      or
;   SUPPRESSPOPUPS=?

;   Here now are the six commands with a description and any warnings for each

;   Command ADD_TOP:
;   Use this to add a line to the top of the config.sys.  The first item you
;   list will always become the top line of your config.sys.  Any succeeding
;   lines will be printed in order below it.  This command does not check
;   first for duplication. It does no checking at all.  It simply adds your
;   line to the top of the file. The line may begin with REM

<ADD_TOP>
;   REM Config.sys generated by tunecfg.cmd
</ADD_TOP>

;  Command ADD_BOT:
;  Exactly the same as ADD_TOP except will add a line to the bottom of the
;  config.sys file.  The lines will be printed in the order they are read, so
;  the last item you list here will always be the last line of your config.sys.

<ADD_BOT>
   SET MENUSFOLLOWPOINTER=ON
   SET KILLFEATUREENABLED=ON
   SET SCFINDUTILITY=?:\OS2\APPS\PMSEEK.EXE
   SET SCUSEPRETTYCLOCK=ON
;  The statement below will automatically be enabled by UpdCD if TCP/IP 4.1 
;  or higher is being used. Otherwise, enable it by hand. Be sure to see the 
;  Known Problems section of the main UpdCD readme file.
;  SET JAVA_HIGH_MEMORY=1
   SET SHELLHANDLESINC=20
   SET RESTARTOBJECTS=STARTUPFOLDERSONLY
   AUTOFAIL=YES
   VIRTUALADDRESSLIMIT=3072
</ADD_BOT>

;   Command UPDATE:
;   This command will substitute the entire definition of the
;   variable with the definition you provide here. WARNING!! Do NOT
;   use this command on a variable whose definition is a list, such
;   as the LIBPATH or PATH variables. Use the APPEND or PREPEND command instead.
<UPDATE>
   PRINTMONBUFSIZE=512,134,134
</UPDATE>

;   Command: REMOVE
;   This command will effectively remove the statement from your
;   config.sys, although the data is not deleted but remarked out.
;   You don't have to worry about including any parameters, they are
;   not part of the equality test anyway.

<REMOVE>
   BASEDEV=IBM2FLPY.ADD
</REMOVE>

;   Command: APPEND
;   This command is ONLY to be used on variables whose definition is a list.
;   Such variables include the libpath, set path, set book, set help, and other variables.
;   Use APPEND to add another entry to the end of the list of entries that make up
;   the definition.
;   Since any new item will be delimited from the rest of the list by a semi-colon,
;   this command should NOT be used to add parameters to a definition.
;   Use the UPDATE command for that task instead and provide the entire
;   definition, including all parameters
<APPEND>
    SET PATH=?:\IBMINST
</APPEND>

;   Command: PREPEND
;   This command is ONLY to be used on variables whose definition is a list.
;   Such variables include the libpath, set path, set book, set help, and other variables.
;   Use this command to add another entry to the beginning of the list entries that make up
;   the definition.
<PREPEND>
;   SET PATH=?:\USR\BIN
</PREPEND>

